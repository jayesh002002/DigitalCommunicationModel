clear all;close all;%---------------- Initial Parameters ----------------n = 24;     %number of bitsM = 4;        %4-QAMk = log2(M);  %number of bits in one symbolw = 2*pi*10;  %angular frequencyif mod(n, k) ~= 0    error('numberOfBits must be a multiple of log2(M).');endnumSamplesPerSymbol = 1;    % Oversampling factor%----------------Creation of the bitstream ---------dataIn = randi(2,n,1) - 1  % Generate vector of binary datafigure(1)stem(dataIn,"filled");title('Data In');xlabel('Bit Index');ylabel('Binary Value');%----------------- QAM Mapper --------------------numberOfSymbols = length(dataIn)/k; %number of symbols in the FIFO% Define mapping table applying Gray mappingmappingTable(1) =  1 + 1*i;mappingTable(2) = -1 + 1*i;mappingTable(3) =  1 - 1*i;mappingTable(4) = -1 - 1*i;mappedSymbols = zeros(1, numberOfSymbols);% Map bits to symbolsfor i = 1:k:length(dataIn)     symbolBits = dataIn(i:i+k-1);  symbolIndex = 2^1 * symbolBits(1) + 2^0 * symbolBits(2);     % Mapping   mappedSymbols((i - 1)/k + 1) = mappingTable( symbolIndex + 1);   endforfigure(2);subplot(2,1,1);stem(real(mappedSymbols));title("Real part")subplot(2,1,2);stem(imag(mappedSymbols));title("Imaginary part")